[build-system]
requires = ["setuptools>=48", "setuptools_scm[toml]>=6.3.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[project]
name = "dvc-studio-client"
description = "Small library to post data from DVC/DVCLive to Iterative Studio "
readme = "README.rst"
license = {text = "Apache-2.0"}
authors = [{ name = "Iterative", email = "support@dvc.org" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Development Status :: 1 - Planning",
]
requires-python = ">=3.8"
dynamic = ["version"]
dependencies = [
    "dulwich",
    "requests",
    "voluptuous",
]

[project.urls]
Issues = "https://github.com/iterative/dvc-studio-client/issues"
Source = "https://github.com/iterative/dvc-studio-client"

[project.optional-dependencies]
docs = [
    "mkdocs==1.5.3",
    "mkdocs-gen-files==0.5.0",
    "mkdocs-material==9.5.8",
    "mkdocs-section-index==0.3.8",
    "mkdocstrings-python==1.8.0",
]
tests = [
    "pytest==8.0.0",
    "pytest-sugar==1.0.0",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "mypy==1.8.0",
]
dev = [
    "dvc-studio-client[tests]",
    "dvc-studio-client[docs]",
    "types-requests",
]

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.pytest.ini_options]
addopts = "-ra"

[tool.coverage.run]
branch = true
source = ["dvc-studio-client", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "raise AssertionError",
    "@overload",
]

[tool.mypy]
# Error output
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
pretty = true
check_untyped_defs = false
# Warnings
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
files = ["src", "tests"]

[tool.codespell]
ignore-words-list = " "

[tool.ruff]
ignore = [
    "S101", # assert
    "PLR2004", # magic-value-comparison
    "PLW2901", # redefined-loop-name
    "ISC001", # single-line-implicit-string-concatenation
    "SIM105", # suppressible-exception
    "SIM108", # if-else-block-instead-of-if-exp
    "D203", # one blank line before class
    "D213", # multi-line-summary-second-line
]
select = [
    "F", "E", "W", "C90", "I", "N", "UP", "YTT", "ASYNC", "S", "BLE", "B", "A", "C4", "T10",
    "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET",
    "SLOT", "SIM", "TID", "TCH", "ARG", "PGH", "PLC", "PLE", "PLR", "PLW", "TRY",
    "FLY", "PERF101", "RUF",
]

show-source = true
show-fixes = true

[tool.ruff.per-file-ignores]
"noxfile.py" = ["D", "PTH"]
"tests/**" = ["S", "ARG001", "ARG002", "ANN"]
"docs/**" = ["INP"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
known-first-party = ["{{ cookiecutter.package_name }}"]
